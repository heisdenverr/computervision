# -*- coding: utf-8 -*-
"""pytorch_fundamentals.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R0OtbBAJWeDynHmfDE_IdUPXPD4y_9gm
"""

print('helllo')

import torch
import pandas as pd
import numpy as np
print(torch.__version__)

# introduction to tensors

scalar = torch.tensor(7)
scalar

scalar.ndim

scalar.item()

vector = torch.tensor([7, 7])
vector

vector.ndim
vector.shape

vector.ndim

matrix = torch.tensor([[7, 8],
                       [9, 10]
])
matrix

matrix.ndim

matrix.shape

matrix[1]

matrix[0, 1]

matrix[1, 1]

Tensor = torch.tensor([[[1, 2, 3],
                        [4, 5, 6],
                        [7, 8, 9]]])

Tensor.shape

Tensor.ndim

random_tensor = torch.rand(3, 4)
  random_tensor

random_tensor.ndim

image_tensor = torch.rand(size=(244, 244, 244))
image_tensor

image_tensor.ndim

zero = torch.zeros(size=(3, 4))
zero

zero * random_tensor

ones =  torch.ones(size=(3, 4))
ones

ones.dtype, zero.dtype

t = torch.arange(start=0, end=1000, step=4)
t

float32_tensor = torch.tensor([3.0, 6.0, 8.0], dtype=torch.float64)
float32_tensor.dtype

victor = torch.rand(7, 7)
victor

victor.T

victor @ victor